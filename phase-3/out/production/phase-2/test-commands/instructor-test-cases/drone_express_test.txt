// create some ingredients to be purchased
make_ingredient,saf_spc,saffron,4
display_ingredients
make_ingredient,iku_sfd,ikura,9
make_ingredient,truf_fgs,truffles,6
// for display consistency, information is listed in ascending alphanumeric order
display_ingredients
// create some locations for... well, everything else
make_location,airport,5,6,3
display_locations
make_location,plaza,10,18,2
display_locations
// the distance function is shared with you for test result standardization
check_distance,airport,plaza
// create delivery services to supply the various ingredients
make_service,swift_spices,0,airport
display_services
make_service,mobile_sous_chef,0,plaza
display_services
// create restaurants who generate a demand for the ingredients
make_restaurant,tre_vele,plaza
display_restaurants
// the swift_spices delivery service creates drones to deliver ingredients
// drones are created (by default) at the service's home base
make_drone,swift_spices,4,2,10
make_drone,swift_spices,16,2,20
make_drone,swift_spices,9,2,30
display_drones,swift_spices
// the drones can be loaded with ingredients (or none at all) in various ways
load_ingredient,swift_spices,16,saf_spc,2,8
load_ingredient,swift_spices,9,saf_spc,1,10
load_ingredient,swift_spices,9,truf_fgs,1,7
display_drones,swift_spices
// restaurants will purchase ingredients only from local drones at their location
purchase_ingredient,tre_vele,swift_spices,16,saf_spc,2
// drones must move to the restaurant's location safely to complete the purchase
fly_drone,swift_spices,4,plaza
fly_drone,swift_spices,16,plaza
fly_drone,swift_spices,9,plaza
display_drones,swift_spices
// restaurant purchases are limited by the drone's carrying capacity
purchase_ingredient,tre_vele,swift_spices,9,saf_spc,2
purchase_ingredient,tre_vele,swift_spices,9,saf_spc,1
display_drones,swift_spices
// the purchase payment is exchange between the restaurant and drone for now
display_restaurants,swift_spices
// the mobile_sous_chef delivery service creates drones to compete with swift_spices
make_drone,mobile_sous_chef,4,5,35
display_drones,mobile_sous_chef
// you can display all drones to get a more comprehensive view of the system state
display_all_drones
// each location has a limited space that impacts the number of drones in that area
make_drone,mobile_sous_chef,7,8,100
display_drones,mobile_sous_chef
// this drone is loaded with ingredients to begin its flying and purchasing actions
load_ingredient,mobile_sous_chef,4,truf_fgs,2,8
load_ingredient,mobile_sous_chef,4,iku_sfd,2,17
display_all_drones
// various entities can be created dynamically during the execution of the simulation
make_location,southside,8,3,2
display_locations
check_distance,plaza,southside
make_restaurant,casi_cielo,southside
display_restaurants
// drone travel must be conducted safely and...
fly_drone,swift_spices,9,southside
// ...refueling operations much be conducted at the service's home base...
load_fuel,swift_spices,9,20
load_fuel,swift_spices,4,20
load_ingredient,swift_spices,4,truf_fgs,2,19
display_drones,swift_spices
// ...as well as restocking operations
fly_drone,mobile_sous_chef,4,southside
purchase_ingredient,casi_cielo,mobile_sous_chef,4,truf_fgs,2
load_ingredient,mobile_sous_chef,4,truf_fgs,3,17
// a final look at the overall system state of the system
display_all_drones
display_ingredients
display_locations
display_services
display_restaurants
stop